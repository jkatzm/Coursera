plot(cars)
### Bayesian Modeling
plot(cars)
knit_with_parameters('~/Desktop/Coursera Bayesian Statistics/Bayesian_Ch1.Rmd')
> block quote
### Monte Carlo Estimation
equation: $A = \pi& r^2$
Suppose we have $$ h(\theta) $$ and want to calculate $$ E[\theta] $$
curve(dgamma(x=x, shape=a, rate=b), col="blue", add=TRUE)
```{r}
set.seed(32)
m = 100
a = 2.0
b = 1.0 / 3.0
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x=x, shape=a, rate=b), col="blue", add=TRUE)
```
set.seed(32)
m = 100
a = 2.0
b = 1.0 / 3.0
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x=x, shape=a, rate=b), col="blue", add=TRUE)
> Example: Suppose we have $\theta \sim$ Ga$(a,b)$ and want to know $E[\theta]$
$$
E[\theta] = \int_0^\infty \theta p(\theta) d\theta = \int_0^\infty \theta \frac{b^a}{\Gamma(a)} \theta^{a-1} e^{-b\theta} d\theta = \frac{a}{b}
$$
Suppose we have some function $h(\theta)$ and we want $E[h(\theta)]$. Can estimate
$$
E[h(\theta)] = \int h(\theta) p(\theta) d\theta \approx \frac{1}{m} \sum_{i=1}^m h(\theta_i^*)
$$
In particular, if $h(\theta)$ is $I_A(\theta)$, i.e. the indication function for logical event $A$, then we can approximate probabilities as well.
hist(theta, freq=FALSE)
curve(dgamma(x, shape=a, rate=b), col="blue", add=TRUE)
set.seed(32)
m=100
a=2
b=1/3
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x, shape=a, rate=b), col="blue", add=TRUE)
True = a/b
```{r}
Estimate = mean(theta)
```{r}
TrueVal = a/b
```{r}
```{r}
set.seed(32)
m=100
a=2
b=1/3
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x, shape=a, rate=b), col="blue", add=TRUE)
Estimate = mean(theta)
TrueVal = a/b
set.seed(32)
m=100
a=2
b=1/3
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x, shape=a, rate=b), col="blue", add=TRUE)
mean(theta)
a/b
set.seed(32)
m=100
a=2
b=1/3
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x, shape=a, rate=b), col="blue", add=TRUE)
mean(theta) # Estimated mean
a/b # True mean
var(theta) # Estimates variance
a/b^2 # True variance
ind = theta < 5
mean(ind) # Estimated Prob[theta < 5]
pgamma(q=5, shape=a, rate=b) # True Prob[theta < 5]
quantile(theta, probs=0.9) # Estimated quantile
qgamma(p=0.9, shape=a, rate=b) # True quantile
se = sd(theta) / sqrt(m) # Standard error of mean
mean(theta) - 2*se # Lower bound CI
mean(theta) + 2*se # Upper bound CI
set.seed(32)
m=10000
a=2
b=1/3
theta = rgamma(n=m, shape=a, rate=b)
hist(theta, freq=FALSE)
curve(dgamma(x, shape=a, rate=b), col="blue", add=TRUE)
mean(theta) # Estimated mean
a/b # True mean
var(theta) # Estimated variance
a/b^2 # True variance
ind = theta < 5
mean(ind) # Estimated Prob[theta < 5]
pgamma(q=5, shape=a, rate=b) # True Prob[theta < 5]
quantile(theta, probs=0.9) # Estimated quantile
qgamma(p=0.9, shape=a, rate=b) # True quantile
se = sd(theta) / sqrt(m) # Standard error of mean
mean(theta) - 2*se # Lower bound CI
mean(theta) + 2*se # Upper bound CI
(2,3)
m = 1e5
phi = rbeta(m, shape1=2, shape2=2)
y = rbinom(m, size=10, prob=phi)
table(y)
m = 1e5
phi = rbeta(m, shape1=2, shape2=2)
y = rbinom(m, size=10, prob=phi)
table(y)
table(y) / m
plot(table(y) / m)
m = 1e5
phi = rbeta(m, shape1=2, shape2=2)
y = rbinom(m, size=10, prob=phi)
table(y) / m
plot(table(y) / m)
